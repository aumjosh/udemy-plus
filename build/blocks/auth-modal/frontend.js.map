{"version":3,"file":"blocks/auth-modal/frontend.js","mappings":"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","sources":["webpack://udemy-plus/./src/blocks/auth-modal/frontend.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const openModalBtn = document.querySelectorAll('.open-modal')\n    const modalEl = document.querySelector(\n        '.wp-block-udemy-plus-auth-modal'\n        )\n    const modalCloseEl = document.querySelectorAll(\n        '.modal-overlay, .modal-btn-close'\n    )\n\n    openModalBtn.forEach(el => {\n        el.addEventListener('click', event => {\n            event.preventDefault()\n\n            modalEl.classList.add('modal-show')\n        })\n    })\n\n    modalCloseEl.forEach(el => {\n        el.addEventListener('click', event => {\n            event.preventDefault()\n\n            modalEl.classList.remove('modal-show')\n        })\n    })\n\n    const tabs = document.querySelectorAll('.tabs a')\n    const signinForm = document.querySelector('#signin-tab')\n    const signupForm = document.querySelector('#signup-tab')\n    \n    tabs.forEach(tab => {\n        tab.addEventListener('click', event => {\n            event.preventDefault()\n\n            tabs.forEach(currentTab => {\n                currentTab.classList.remove('active-tab')\n            })\n\n            event.currentTarget.classList.add('active-tab')\n\n            const activeTab = event.currentTarget.getAttribute('href')\n            \n            if(activeTab === '#signin-tab') {\n                signinForm.style.display = 'block'\n                signupForm.style.display = 'none'\n\n            }\n            else {\n                signinForm.style.display = 'none'\n                signupForm.style.display = 'block'\n            }\n        })\n    })\n\n    // we mark this event as async\n    // because it will use the fetch() function\n    // which will return a promise\n    // we don't want to stop executing the code while waiting for the return of the promise\n    signupForm.addEventListener('submit', async  event => {\n        event.preventDefault()\n        const signupFieldset = signupForm.querySelector('fieldset')\n        signupFieldset.setAttribute('disabled', true)\n        const signupStatus = signupForm.querySelector('#signup-status')\n        signupStatus.innerHTML = `\n            <div class=\"modal-status modal-status-info\">\n                Please wait!  We are creating your account.\n            </div>\n        `\n\n        // lets grab the form data\n        const formData = {\n            username: signupForm.querySelector('#su-name').value,\n            email: signupForm.querySelector('#su-email').value,\n            password: signupForm.querySelector('#su-password').value\n        }\n\n        // send the request\n        // the async await keyword will tell javascript\n        // to wait for the function to resolve\n        // the await keyword can be applied to functions that return a promise\n        // the await keyword will force function to return the value resolved by the promise\n        // so we can assign it to our variable\n        const response = await fetch(up_auth_rest.signup, {\n            method: 'POST', // GET is the default\n            headers: {\n                'Content-Type': 'application/json' // default is plain-text\n            },\n            // the fetch function will send objects\n            // it must send strings\n            body: JSON.stringify(formData)\n        });\n\n        const responseJSON = await response.json()\n\n        if(responseJSON.status === 2) {\n            signupStatus.innerHTML = `\n                <div class=\"modal-status modal-status-success\">\n                    Success! Your account has been created.\n                </div>\n            `\n            // force the page to refresh to allow the user to be logged in\n            location.reload()\n        }\n        else {\n            // if the user didn't register\n            // re-enable the form\n            signupFieldset.removeAttribute('disabled')\n            signupStatus.innerHTML = `\n                <div class=\"modal-status modal-status-danger\">\n                    Unable to create account! Please try again later.\n                </div>\n            `\n        }\n    })\n\n    // sign-in\n    signinForm.addEventListener('submit', async event => {\n        event.preventDefault()\n        const signinFieldset = signinForm.querySelector('fieldset');\n        signinFieldset.setAttribute('disabled', true)\n        const signinStatus = signinForm.querySelector('#signin-status')\n        signinStatus.innerHTML = `\n            <div class=\"modal-status modal-status-info\">\n                Please wait!  We are logging you in.\n            </div>\n        `\n\n        const formData = {\n            user_login: signinForm.querySelector('#si-email').value,\n            password: signinForm.querySelector('#si-password').value\n        }\n\n        const response = await fetch(up_auth_rest.signin, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        });\n\n        const responseJSON = await response.json()\n\n        if (responseJSON.status === 2) {\n            signinForm.status = `\n                <div class=\"modal-status modal-status-success\">\n                    Success! You have been logged in.\n                </div>\n            `\n            location.reload()\n        }\n        else { \n            signinFieldset.removeAttribute('disabled')\n            signinStatus.innerHTML = `\n                <div class=\"modal-status modal-status-danger\">\n                    Unable to log you in! Please try again later.\n                </div>\n            `\n        }\n    })\n})"],"names":["document","addEventListener","openModalBtn","querySelectorAll","modalEl","querySelector","modalCloseEl","forEach","el","event","preventDefault","classList","add","remove","tabs","signinForm","signupForm","tab","currentTab","currentTarget","activeTab","getAttribute","style","display","signupFieldset","setAttribute","signupStatus","innerHTML","formData","username","value","email","password","response","fetch","up_auth_rest","signup","method","headers","body","JSON","stringify","responseJSON","json","status","location","reload","removeAttribute","signinFieldset","signinStatus","user_login","signin"],"sourceRoot":""}